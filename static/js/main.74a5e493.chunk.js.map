{"version":3,"sources":["components/common/preloader/preloader.module.css","components/tabsNotes/tabsNotes.module.css","components/registration/asyncValidate.js","components/common/preloader/preloader.gif","components/common/preloader/preloader.jsx","components/registration/registrationForm.jsx","API/api.js","redux/auth-reduser.js","components/registration/registerCompletedModal.jsx","components/registration/registration.jsx","redux/isloading-reduser.js","redux/note-reduser.js","components/newNoteForm/newNoteForm.jsx","components/newNoteForm/newNormFormContainer.js","components/tabsNotes/pagesControlButtons.jsx","components/tabsNotes/newTabForm/newPageForm.jsx","components/tabsNotes/newTabForm/newPageFormContainer.js","components/bottomAppBar/simpleMenu/colorModalWindow.jsx","components/bottomAppBar/simpleMenu/simpleMenu.jsx","components/bottomAppBar/bottomAppBar.jsx","components/tabsNotes/noteMenu/noteMenu.jsx","components/tabsNotes/noteMenu/noteColorForm.jsx","components/tabsNotes/editPageTitleForm/editPageTitleForm.jsx","components/tabsNotes/editPageTitleForm/editPageTitleFormContainer.js","components/tabsNotes/editNoteForm/editNoteForm.jsx","components/tabsNotes/editNoteForm/editNoteFormContainer.js","components/tabsNotes/tabsNotes.jsx","App.js","reportWebVitals.js","redux/redux-store.js","index.js","components/registration/registration.module.css","components/bottomAppBar/bottomAppBar.module.css","components/newNoteForm/newNoteForm.module.css","components/tabsNotes/newTabForm/newTabForm.module.css","components/tabsNotes/noteMenu/noteMenu.module.css","components/tabsNotes/editPageTitleForm/editPageTitleForm.module.css","components/tabsNotes/editNoteForm/editNoteForm.module.css"],"names":["module","exports","asyncValidate","values","ms","Promise","resolve","setTimeout","then","includes","email","SmallPreloader","props","className","style","smallPreloader","src","preloaderImg","alt","LoginButton","type","disabled","pristine","submitting","isLoading","loginButton","variant","to","RegistrationButton","regButton","renderTextField","label","input","meta","touched","invalid","error","custom","TextField","placeholder","helperText","RegistrationReduxForm","reduxForm","form","validate","errors","forEach","field","test","handleSubmit","onSubmit","Field","name","component","regOrLogErrorValue","path","render","instance","axios","baseURL","headers","authAPI","userId","get","response","data","login","password","post","patch","pagesAPI","pageTitle","pageId","tabColor","tabTextColor","delete","newPageTitle","notesAPI","noteContent","noteId","noteColor","noteTextColor","newNoteText","IS_AUTH","REG_OR_LOG_ERROR","SET_LOADING","IS_REGISTER","initialState","isAuth","isRegister","setAuthDataInState","regOrLogErrorData","setLoading","setRegistrationModalWindow","setAuth","localStorage","getItem","dispatch","id","authReduser","state","action","RegisterCompletedModal","modalWrapper","modal","onClick","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","backgroundColor","margin","spacing","width","height","connect","auth","registration","result","setItem","classes","formData","Paper","elevation","formTitle","exact","SET_PAGE_IS_CREATE","SET_NOTE_IS_CREATE","pageIsCreate","noteIscreate","setPageIsCreate","isCreate","setNoteIsCreate","isLoadingReduser","SET_PAGES_IN_STATE","SET_EDIT_MODE","SET_CREATE_NEW_PAGE_MODE","SET_NEW_PAGE_IN_STATE","SET_NEW_NOTE_IN_STATE","SET_TAB_COLOR_EDIT_MODE","SET_TAB_COLOR","SET_NOTE_COLOR","DELETE_PAGE","DELETE_NOTE","SET_NEW_PAGE_TITLE","SET_NEW_NOTE_TEXT","pages","editMode","createNewPageMode","tabColorEditMode","setEditModeForNote","isActivate","setCreateNewPageMode","setNewNoteInState","note","setTabColorEditMode","setTabColorInState","page","deletePageInState","deleteNoteInState","setNoteColorInState","setNewPageTitleInState","setNewNoteTextInState","noteReduser","find","_id","notes","push","updatedPages","map","el","filter","title","content","NewNoteReduxForm","newNoteForm","newNoteInput","autoFocus","newNoteBtn","addNewNote","a","newNote","AddNewPageButton","addNewPageButton","NewPageReduxForm","newPageForm","newPageInput","newPageBtn","addNewPage","newPage","ColorModalWindow","useState","bookmarkColor","setBookmarkColor","bookmarkTextColor","setBookmarkTextColor","setTabColor","setColorItem","value","onChange","e","target","for","deletePage","React","anchorEl","setAnchorEl","handleClose","Button","aria-controls","aria-haspopup","event","currentTarget","menuBtn","Menu","keepMounted","open","Boolean","onClose","MenuItem","setPageTitleEditMode","text","padding","paper","paddingBottom","list","marginBottom","subheader","palette","background","appBar","top","bottom","grow","flexGrow","fabButton","position","zIndex","left","right","exitBtn","textDecoration","logout","Fragment","CssBaseline","AppBar","color","Toolbar","IconButton","edge","aria-label","Fab","deleteNote","setNoteEditMode","setNoteId","setNoteTextEditMode","setNoteColor","setNoteTextColor","EditPageTitleFormReduxForm","editPageTitleForm","editPageTitleInput","editPageTitleBtn","editPageTitle","EditNoteFormReduxForm","editNoteForm","editNoteInput","editNoteBtn","editNoteText","editNote","TabPanel","children","index","other","setPageId","role","hidden","aria-labelledby","Box","p","Typography","a11yProps","wordWrap","fontStyle","appBarItem","marginTop","borderBottom","compose","getAllPages","withRouter","setValue","noteEditMode","pageTitleEditMode","noteTextEditMode","useEffect","initialValues","Tabs","newValue","indicatorColor","textColor","scrollButtons","length","Tab","arr","square","gutterBottom","List","ListItem","button","ListItemText","primary","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","redusers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74a5e493.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__3qEnX\",\"smallPreloader\":\"preloader_smallPreloader__3XE3o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showAllPagesButton\":\"tabsNotes_showAllPagesButton__1XTxA\",\"addNewPageButton\":\"tabsNotes_addNewPageButton__1bJA4\",\"color\":\"tabsNotes_color__1gl_N\"};","const sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\nconst asyncValidate = (values /*, dispatch */) => {\r\n  return sleep(1000).then(() => {\r\n    // simulate server latency\r\n    if (['foo@foo.com', 'bar@bar.com'].includes(values.email)) {\r\n      // eslint-disable-next-line no-throw-literal\r\n      throw { email: 'Email already Exists' }\r\n    }\r\n  })\r\n}\r\n\r\nexport default asyncValidate;","export default __webpack_public_path__ + \"static/media/preloader.4695b8d7.gif\";","import React from 'react';\r\nimport style from './preloader.module.css';\r\nimport preloaderImg from './preloader.gif'\r\n\r\nexport const Preloader = (props) => {\r\n    return (\r\n        <div className={style.preloader}>\r\n            <img src={preloaderImg} alt='' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const SmallPreloader = (props) => {\r\n    return (\r\n        <div className={style.smallPreloader}>\r\n            <img src={preloaderImg} alt='' />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport style from './registration.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport asyncValidate from './asyncValidate';\r\nimport { NavLink, Route } from 'react-router-dom';\r\nimport {SmallPreloader} from '../common/preloader/preloader';\r\n\r\nconst LoginButton = (props) => {\r\n  return (\r\n    <>\r\n      <button type=\"submit\" disabled={props.pristine || props.submitting || props.isLoading} className={style.loginButton} >\r\n        {props.isLoading ? <SmallPreloader /> : 'Login'} \r\n      </button>\r\n      <div>\r\n        <NavLink variant=\"contained\" to={'/my-notepad-react-app/registration'} >\r\n          Go to registration\r\n        </NavLink>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst RegistrationButton = (props) => {\r\n  return (\r\n    <>\r\n      <button type=\"submit\" disabled={props.pristine || props.submitting || props.isLoading} className={style.regButton} >\r\n        {props.isLoading ? <SmallPreloader /> : 'Registration'} \r\n      </button>\r\n      <div>\r\n        <NavLink variant=\"contained\" to={'/my-notepad-react-app/login'} >\r\n          Go to login\r\n        </NavLink>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    'login',\r\n    'password'\r\n  ]\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Required'\r\n    }\r\n  })\r\n  if (\r\n    values.email &&\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n  ) {\r\n    errors.email = 'Invalid email address'\r\n  }\r\n  return errors\r\n}\r\n\r\nconst renderTextField = ({\r\n  label,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    label={label}\r\n    placeholder={label}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n  />\r\n);\r\n\r\nconst MaterialUiForm = (props) => {\r\n  const { handleSubmit, pristine, submitting } = props;\r\n  \r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field name=\"login\" component={renderTextField} label=\"Login or E-mail\"/>\r\n      </div>\r\n      <div>\r\n        <Field name=\"password\" component={renderTextField} label=\"Password\" />\r\n      </div>\r\n      <div className = {style.error}>\r\n        {props.regOrLogErrorValue}\r\n      </div>\r\n      <div>\r\n        <Route path={'/my-notepad-react-app/login'} render={()=> <LoginButton pristine={pristine} submitting={submitting} \r\n            isLoading={props.isLoading} /> } />\r\n        <Route path={'/my-notepad-react-app/registration'} render={()=> <RegistrationButton pristine={pristine} submitting={submitting}\r\n            isLoading={props.isLoading} /> } />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport const RegistrationReduxForm = reduxForm({\r\n  form: 'MaterialUiForm', // a unique identifier for this form\r\n  validate,\r\n  asyncValidate\r\n})(MaterialUiForm)\r\n","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({ \r\n   // withCredentials: true,    почему то не работает если это раскоментить\r\n    baseURL: 'https://thawing-earth-93038.herokuapp.com/myNotepad/',\r\n    headers: {\r\n\r\n    }    \r\n});\r\n\r\nexport const authAPI = {\r\n    me(userId) {       \r\n        return instance.get('/me/' + userId) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    },\r\n    registration(login, password) {  // Создает объект User на сервере\r\n        return instance.post('/registration', {login, password}) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    },\r\n    login(login, password) {    // Только меняет isAuth на сервере\r\n        return instance.patch('/login', {login, password}) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    },\r\n    logout(userId) {    // Только меняет isAuth на сервере\r\n        return instance.patch('/logout', {userId}) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    }\r\n} \r\n\r\nexport const pagesAPI = {\r\n    getPages(userId) {       \r\n        return instance.get('/pages/' + userId) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    },\r\n    postNewPage (userId, pageTitle) {  \r\n        return instance.post('/pages/' + userId, {pageTitle}) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    },\r\n    setTabColor (userId, pageId, tabColor, tabTextColor) {  \r\n        return instance.patch('/pages/' + userId, {pageId, tabColor, tabTextColor}) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    },\r\n    deletePage (userId, pageId) {  \r\n        return instance.delete(`pages/${userId}/${pageId}`) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    },\r\n    editPageTitle (userId, pageId, newPageTitle) {  \r\n        return instance.patch('pages/editPageTitle/'+userId, {pageId, newPageTitle}) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    }\r\n};\r\n\r\nexport const notesAPI = {\r\n    postNewNote (userId, pageId, noteContent) {  \r\n        return instance.post('/notes/' + userId, {pageId, noteContent}) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    },\r\n    deleteNote (userId, pageId, noteId) {  \r\n        return instance.delete(`notes/${userId}/${pageId}/${noteId}`) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    },\r\n    setNoteColor(userId, pageId, noteId, noteColor, noteTextColor) {  \r\n        return instance.patch('/notes/' + userId, {pageId, noteId, noteColor, noteTextColor}) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    },\r\n    editNoteText (userId, pageId, noteId, newNoteText) {  \r\n        return instance.patch('notes/editNoteText/'+userId, {pageId, noteId, newNoteText}) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    }\r\n}\r\n\r\n\r\n/* \r\nexport const todosAPI = {\r\n    getAllTodos (id) {  \r\n        return instance.get('/todos/'+id) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    },\r\n    postNewTodo (id, content) {  \r\n        return instance.post('todos/'+id, {content}) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    },\r\n    deleteTodo (id, todoId) {  \r\n        return instance.delete(`todos/${id}/${todoId}`) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    },\r\n    updateTodo(id, content, todoId) {\r\n        return instance.patch('todos/'+id, {content, todoId}) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    },\r\n    completedTodo(id, todoId) {\r\n        return instance.patch('completed/'+id, {todoId}) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me(userId) {       \r\n        return instance.get('/me/' + userId) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    },\r\n    registration(login, password) {  // Создает объект User на сервере\r\n        return instance.post('/registration', {login, password}) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    },\r\n    login(login, password) {    // Только меняет isAuth на сервере\r\n        return instance.patch('/login', {login, password}) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    },\r\n    logout(id) {    // Только меняет isAuth на сервере\r\n        return instance.patch('/logout', {id}) \r\n        .then(response => {\r\n                return response.data;  \r\n            });\r\n    }\r\n} */","import { authAPI } from \"../API/api\";\r\n\r\nconst IS_AUTH = 'IS_AUTH';\r\nconst REG_OR_LOG_ERROR = 'REG_OR_LOG_ERROR';\r\nconst SET_LOADING = 'SET_LOADING';\r\nconst IS_REGISTER = 'IS_REGISTER';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    isAuth: false,\r\n    regOrLogErrorValue: null,   \r\n    isLoading: false,\r\n    isRegister: false //for open and close modal Window about completed registration\r\n}\r\n\r\nconst authReduser = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case IS_AUTH:\r\n            return {\r\n                ...state,   \r\n                userId: action.userId,\r\n                isAuth: action.isAuth\r\n            };\r\n        case REG_OR_LOG_ERROR:\r\n            return{\r\n                ...state,   \r\n                regOrLogErrorValue: action.error\r\n            };\r\n        case SET_LOADING:\r\n            return{\r\n                ...state,   \r\n                isLoading: action.isLoading\r\n            };\r\n        case IS_REGISTER:\r\n        return{\r\n            ...state,   \r\n            isRegister: action.isRegister\r\n        };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//Action Creators\r\nexport const setAuthDataInState = (userId, isAuth) =>  ({type: IS_AUTH, userId, isAuth});\r\nconst regOrLogErrorData = (error) =>  ({type: REG_OR_LOG_ERROR, error});\r\nconst setLoading = (isLoading) =>  ({type: SET_LOADING, isLoading});\r\nexport const setRegistrationModalWindow = (isRegister) =>  ({type: IS_REGISTER, isRegister});\r\n\r\n//Thunks\r\n\r\nexport const setAuth = () => {\r\n    const userId = localStorage.getItem('id');\r\n    return (dispatch) => {\r\n        authAPI.me(userId)\r\n            .then(response => {     \r\n                if(response.id) {                  \r\n                    dispatch(setAuthDataInState(response.id, true));\r\n                    dispatch(setLoading(false));\r\n                } else {\r\n                    dispatch(setAuthDataInState(null, false));\r\n                    dispatch(setLoading(false));\r\n                }           \r\n            });\r\n    }\r\n}  \r\n\r\nexport const registration = (login, password) => {\r\n    return (dispatch) => {\r\n        dispatch(setLoading(true));\r\n        authAPI.registration(login, password)\r\n            .then(response => {     \r\n                if(response.result === 'ok') {        \r\n                    dispatch(setRegistrationModalWindow(true)); \r\n                    dispatch(regOrLogErrorData(null)); \r\n                    dispatch(setLoading(false));           \r\n                } else {\r\n                    dispatch(regOrLogErrorData(response.error));  \r\n                    dispatch(setLoading(false));                 \r\n                }           \r\n            });\r\n    }\r\n}\r\n\r\nexport const login = (login, password) => {\r\n    return (dispatch) => {\r\n        dispatch(setLoading(true));\r\n        authAPI.login(login, password)\r\n            .then(response => {     \r\n                if(response.result === 'ok') {\r\n                    localStorage.setItem('id', response.userId);                  \r\n                    dispatch(setAuth());\r\n                    dispatch(regOrLogErrorData(null)); \r\n                    dispatch(setLoading(false));\r\n                } else {\r\n                    dispatch(regOrLogErrorData(response.error));\r\n                    dispatch(setLoading(false)); \r\n                }            \r\n            });\r\n    }\r\n}\r\n\r\nexport const logout = (userId) => {\r\n    return (dispatch) => {\r\n        authAPI.logout(userId)\r\n            .then(response => {     \r\n                if(response.result === 'ok') {  \r\n                    delete localStorage.id;                \r\n                    dispatch(setAuth());\r\n                }            \r\n            });\r\n    }\r\n}\r\n\r\n/* \r\nexport const logout = (id) => {\r\n    return (dispatch) => {\r\n        //dispatch(regOrLogIsCompleted(false));\r\n        authAPI.logout(id)\r\n            .then(response => {     \r\n                if(response.result === 'ok') {  \r\n                    delete localStorage.id;                \r\n                    dispatch(setAuth());\r\n                    //dispatch(regOrLogIsCompleted(true));\r\n                }            \r\n            });\r\n    }\r\n}  */\r\n\r\nexport default authReduser;","import React from 'react';\r\nimport style from './registration.module.css';\r\n\r\nconst RegisterCompletedModal = (props) => {\r\n    const closeModalWindow = () => {\r\n        props.setRegistrationModalWindow(false);\r\n    }\r\n\r\n    return (\r\n        <div className={style.modalWrapper}>\r\n            <div className={style.modal}>\r\n                <h2>Registration completed successfully, please login </h2>\r\n                <button onClick={closeModalWindow}>OK!</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterCompletedModal;\r\n","import React from 'react';\r\nimport style from './registration.module.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { RegistrationReduxForm } from './registrationForm';\r\nimport { connect } from 'react-redux';\r\nimport {registration, login, setRegistrationModalWindow} from '../../redux/auth-reduser';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport RegisterCompletedModal from './registerCompletedModal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'no-wrap',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#defff2',\r\n    '& > *': {\r\n      margin: theme.spacing(3),\r\n      width: theme.spacing(100),\r\n      height: theme.spacing(100),\r\n    },\r\n  },\r\n}));\r\n\r\nconst Registration = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const login = (formData) => {\r\n   props.login(formData.login, formData.password)\r\n  }\r\n  const registration = (formData) => {\r\n    props.registration(formData.login, formData.password)\r\n  }\r\n\r\n  return (\r\n    props.isRegister ? <RegisterCompletedModal setRegistrationModalWindow = {props.setRegistrationModalWindow} /> :\r\n    <div className={classes.root}>\r\n      <Paper elevation={10} >\r\n          <h1 className={style.formTitle}>MyNote</h1>\r\n          <h2 className={style.formTitle}>Log in or register</h2>\r\n          <Route path={'/my-notepad-react-app/login'} render={() => <RegistrationReduxForm onSubmit = {login} \r\n              regOrLogErrorValue={props.regOrLogErrorValue} isLoading={props.isLoading} /> } />  \r\n          <Route path={'/my-notepad-react-app/registration'} render={() => <RegistrationReduxForm onSubmit = {registration} \r\n              regOrLogErrorValue={props.regOrLogErrorValue} isLoading={props.isLoading} /> } /> \r\n          <Route exact path={'/'}> <Redirect to={'/my-notepad-react-app/login'} /> </Route>\r\n          <Route exact path={'/my-notepad-react-app/'}> <Redirect to={'/my-notepad-react-app/login'} /> </Route>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    regOrLogErrorValue: state.auth.regOrLogErrorValue,\r\n    isLoading: state.auth.isLoading,\r\n    isRegister: state.auth.isRegister\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { registration, login, setRegistrationModalWindow })(Registration)\r\n\r\n","\r\nconst SET_PAGE_IS_CREATE = 'isLoading/SET_PAGE_IS_CREATE'; \r\nconst SET_NOTE_IS_CREATE = 'isLoading/SET_NOTE_IS_CREATE';\r\n\r\nlet initialState = {\r\n    pageIsCreate: true,\r\n    noteIscreate: true\r\n}\r\n\r\nconst isLoadingReduser = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_PAGE_IS_CREATE:{\r\n            return{\r\n                ...state,   \r\n                pageIsCreate: action.isCreate\r\n            };\r\n        }\r\n        case SET_NOTE_IS_CREATE:\r\n        return{\r\n            ...state,   \r\n            noteIscreate: action.isCreate\r\n        };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//Action Creators\r\n\r\n//Для отображения прелоадера, пока идет запрос на сервак при создании новой страницы или note \r\nexport const setPageIsCreate = (isCreate) =>  {\r\n    return {type: SET_PAGE_IS_CREATE, isCreate}; \r\n}\r\nexport const setNoteIsCreate = (isCreate) =>  ({type: SET_NOTE_IS_CREATE, isCreate}); \r\n\r\nexport default isLoadingReduser;","import { notesAPI, pagesAPI } from \"../API/api\";\r\nimport {setPageIsCreate, setNoteIsCreate} from './isloading-reduser';\r\n\r\nconst SET_PAGES_IN_STATE = 'SET_PAGES_IN_STATE';\r\nconst SET_EDIT_MODE = 'SET_EDIT_MODE';\r\nconst SET_CREATE_NEW_PAGE_MODE = 'SET_CREATE_NEW_PAGE_MODE';\r\nconst SET_NEW_PAGE_IN_STATE = 'SET_NEW_PAGE_IN_STATE';\r\nconst SET_NEW_NOTE_IN_STATE = 'SET_NEW_NOTE_IN_STATE';\r\nconst SET_TAB_COLOR_EDIT_MODE = 'SET_TAB_COLOR_EDIT_MODE';\r\nconst SET_TAB_COLOR = 'SET_TAB_COLOR';\r\nconst SET_NOTE_COLOR = 'SET_NOTE_COLOR';\r\nconst DELETE_PAGE = 'DELETE_PAGE'; \r\nconst DELETE_NOTE = 'DELETE_NOTE';\r\nconst SET_NEW_PAGE_TITLE = 'SET_NEW_PAGE_TITLE';\r\nconst SET_NEW_NOTE_TEXT = 'SET_NEW_NOTE_TEXT';\r\n\r\nlet initialState = {\r\n    pages: [],\r\n    editMode: false,\r\n    createNewPageMode: false,\r\n    tabColorEditMode: false\r\n}\r\n\r\nconst noteReduser = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_PAGES_IN_STATE:\r\n        return{\r\n            ...state,   \r\n            pages: [...action.pages]\r\n        };\r\n        case SET_EDIT_MODE:\r\n        return{\r\n            ...state,   \r\n            editMode: action.isActivate\r\n        };\r\n        case SET_TAB_COLOR_EDIT_MODE:\r\n        return{\r\n            ...state,   \r\n            tabColorEditMode: action.isActivate\r\n        };\r\n        case SET_CREATE_NEW_PAGE_MODE:\r\n        return{\r\n            ...state,   \r\n            createNewPageMode: action.isActivate\r\n        };\r\n        case SET_NEW_PAGE_IN_STATE:\r\n        return{\r\n            ...state,   \r\n            pages: [...state.pages, action.page]\r\n        };\r\n        case SET_NEW_NOTE_IN_STATE: {\r\n            const page = state.pages.find( (page) => page._id === action.pageId );\r\n            page.notes.push(action.note);\r\n            const updatedPages = state.pages.map((el) => {\r\n                return el._id === action.pageId ? page : el;  \r\n            });\r\n            return{\r\n                ...state,   \r\n                pages: [...updatedPages]\r\n            };\r\n        }      \r\n        case SET_TAB_COLOR: {\r\n            const updatedPages = state.pages.map((el) => {\r\n                return el._id === action.pageId ? action.page : el;  \r\n            });\r\n            return{\r\n                ...state,   \r\n                pages: [...updatedPages]\r\n            };\r\n        }\r\n        case SET_NOTE_COLOR: {\r\n            const updatedPages = state.pages.map((el) => {\r\n                return el._id === action.pageId ? action.page : el;  \r\n            });\r\n            return{\r\n                ...state,   \r\n                pages: [...updatedPages]\r\n            };\r\n        }\r\n        case DELETE_PAGE: {\r\n            const updatedPages = state.pages.filter((el) => {\r\n                return el._id !== action.pageId;  \r\n            });\r\n            return{\r\n                ...state,   \r\n                pages: [...updatedPages]\r\n            };\r\n        }    \r\n        case SET_NEW_PAGE_TITLE: {\r\n            const page = state.pages.find((el) => el._id === action.pageId);\r\n            page.title = action.newPageTitle;\r\n            const updatedPages = state.pages.map((el) => {\r\n                return el._id === action.pageId ? page : el;  \r\n            });\r\n            return{\r\n                ...state,   \r\n                pages: [...updatedPages]\r\n            };\r\n        }\r\n        case DELETE_NOTE: {\r\n            const page = state.pages.find((el) => el._id === action.pageId);\r\n            const notes = page.notes.filter((el) => el._id !== action.noteId);\r\n            page.notes = notes;\r\n            const updatedPages = state.pages.map((el) => {\r\n                return el._id === action.pageId ? page : el;  \r\n            });\r\n            return{\r\n                ...state,   \r\n                pages: [...updatedPages]\r\n            };    \r\n        }\r\n        case SET_NEW_NOTE_TEXT: {\r\n            const page = state.pages.find((el) => el._id === action.pageId);\r\n            const notes = page.notes.map((note) => {\r\n                if(note._id === action.noteId) {\r\n                    return {...note, content: action.newNoteText}\r\n                } else {return note}\r\n            })\r\n            const updatedPages = state.pages.map((el) => {\r\n                if(el._id === action.pageId) {\r\n                    return {...el, notes: notes}\r\n                } else {return el}\r\n            });\r\n            return{\r\n                ...state,   \r\n                pages: [...updatedPages]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//Action Creators\r\n\r\nconst setAllPagesInState = (pages) =>  ({type: SET_PAGES_IN_STATE, pages}); \r\nexport const setEditModeForNote = (isActivate) =>  ({type: SET_EDIT_MODE, isActivate}); \r\nexport const setCreateNewPageMode = (isActivate) =>  ({type: SET_CREATE_NEW_PAGE_MODE, isActivate}); \r\nconst setNewPageInState = (page) =>  ({type: SET_NEW_PAGE_IN_STATE, page}); \r\nconst setNewNoteInState = (pageId, note) =>  ({type: SET_NEW_NOTE_IN_STATE, pageId, note}); \r\nexport const setTabColorEditMode = (isActivate) =>  ({type: SET_TAB_COLOR_EDIT_MODE, isActivate});\r\nconst setTabColorInState = (pageId, page) =>  ({type: SET_TAB_COLOR, pageId, page}); \r\nconst deletePageInState = (pageId) =>  ({type: DELETE_PAGE, pageId});\r\nconst deleteNoteInState = (pageId, noteId) =>  ({type: DELETE_NOTE, pageId, noteId});\r\nconst setNoteColorInState = (pageId, noteId, page) =>  ({type: SET_NOTE_COLOR, pageId, noteId, page}); \r\nconst setNewPageTitleInState = (pageId, newPageTitle) =>  ({type: SET_NEW_PAGE_TITLE, pageId, newPageTitle}); \r\nconst setNewNoteTextInState = (pageId, noteId, newNoteText) =>  ({type: SET_NEW_NOTE_TEXT, pageId, noteId, newNoteText}); \r\n\r\n//Thunks\r\n\r\nexport const getAllPages = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await pagesAPI.getPages(userId);                  \r\n        dispatch(setAllPagesInState(response));        \r\n    }\r\n}  \r\n\r\nexport const addNewPage = (userId, pageTitle) => {\r\n    setPageIsCreate(false);\r\n    return async (dispatch) => {\r\n        let response = await pagesAPI.postNewPage(userId, pageTitle);                      \r\n        dispatch(setNewPageInState(response)); \r\n        setPageIsCreate(true);       \r\n    }\r\n} \r\n\r\nexport const addNewNote = (userId, pageId, noteContent) => {\r\n    setNoteIsCreate(false);\r\n    return async (dispatch) => {\r\n        let response = await notesAPI.postNewNote(userId, pageId, noteContent);                     \r\n        dispatch(setNewNoteInState(pageId, response)); \r\n        setNoteIsCreate(true);       \r\n    }\r\n} \r\n\r\nexport const setTabColor = (userId, pageId, tabColor, tabTextColor) => {\r\n    return async (dispatch) => {\r\n        let response = await pagesAPI.setTabColor(userId, pageId, tabColor, tabTextColor);                    \r\n        dispatch(setTabColorInState(pageId, response));        \r\n    }\r\n} \r\n\r\nexport const deletePage = (userId, pageId) => {\r\n    return async (dispatch) => {\r\n        let response = await pagesAPI.deletePage(userId, pageId);           \r\n        if(response.result === 'ok') {\r\n            dispatch(deletePageInState(pageId));  \r\n        }                              \r\n    }\r\n} \r\n\r\nexport const deleteNote = (userId, pageId, noteId) => {\r\n    return async (dispatch) => {\r\n        let response = await notesAPI.deleteNote(userId, pageId, noteId);          \r\n        if(response.result === 'ok') {\r\n            dispatch(deleteNoteInState(pageId, noteId));  \r\n        }                              \r\n    }\r\n} \r\n\r\nexport const setNoteColor = (userId, pageId, noteId, noteColor, noteTextColor) => {\r\n    return async (dispatch) => {\r\n        let response = await notesAPI.setNoteColor(userId, pageId, noteId, noteColor, noteTextColor);                    \r\n        dispatch(setNoteColorInState(pageId, noteId, response));        \r\n    }\r\n} \r\n\r\nexport const editPageTitle = (userId, pageId, newPageTitle) => {\r\n    return async (dispatch) => {\r\n        let response = await pagesAPI.editPageTitle(userId, pageId, newPageTitle);                \r\n        dispatch(setNewPageTitleInState(pageId, response));        \r\n    }\r\n} \r\n\r\nexport const editNoteText = (userId, pageId, noteId, newNoteText) => {\r\n    return async (dispatch) => {\r\n        let response = await notesAPI.editNoteText(userId, pageId, noteId, newNoteText);                \r\n        dispatch(setNewNoteTextInState(pageId, noteId, response));        \r\n    }\r\n} \r\n\r\nexport default noteReduser;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport style from './newNoteForm.module.css';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst newNoteForm = (props) => {\r\n\r\n    const setEditModeForNote = () => {\r\n        props.setEditModeForNote(false);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.newNoteForm} >\r\n            <div>\r\n                <Field name=\"newNote\" component={'input'} placeholder='inter your note' \r\n                    className={style.newNoteInput} autoFocus={'true'} /* onBlur={setEditModeForNote} */ />\r\n            </div>\r\n            <button type={'submit'} className={style.newNoteBtn} >\r\n                <AddIcon />\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewNoteReduxForm = reduxForm({\r\n    form: 'createNewNote', // a unique identifier for this form\r\n  })(newNoteForm);\r\n\r\n  export default NewNoteReduxForm;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport NewNoteReduxForm from '../newNoteForm/newNoteForm';\r\nimport {setEditModeForNote, addNewNote} from '../../redux/note-reduser';\r\n\r\nconst NewNoteFormContainer = (props) => {  \r\n    const postNewNote = (formData) => {\r\n        props.addNewNote(props.userId, props.pageId, formData.newNote)\r\n        props.setEditModeForNote(false);\r\n    }\r\n    return (\r\n        <NewNoteReduxForm onSubmit={postNewNote} setEditModeForNote={props.setEditModeForNote} />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setEditModeForNote, addNewNote})(NewNoteFormContainer);","import React from 'react';\r\nimport style from './tabsNotes.module.css';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nexport const AddNewPageButton = (props) => {\r\n    const addNewPage = () => {\r\n        props.setCreateNewPageMode(true);\r\n    }\r\n    \r\n    return (\r\n        <button className={style.addNewPageButton} onClick={addNewPage}>\r\n            <AddIcon />\r\n        </button>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport style from './newTabForm.module.css';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst NewPageForm = (props) => {\r\n\r\n    const setCreateNewPageMode = () => {\r\n        props.setCreateNewPageMode(false);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.newPageForm}>\r\n            <div>\r\n                <Field name=\"newPage\" component={'input'} placeholder='inter page title' autoFocus={'true'}\r\n                    className={style.newPageInput} /* onBlur={setCreateNewPageMode} */ />\r\n            </div>\r\n            <button type={'submit'} className={style.newPageBtn} >\r\n                <AddIcon />\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewPageReduxForm = reduxForm({\r\n    form: 'createNewNote' // a unique identifier for this form\r\n  })(NewPageForm);\r\n\r\n  export default NewPageReduxForm;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport NewPageReduxForm from './newPageForm';\r\nimport {setCreateNewPageMode, addNewPage} from '../../../redux/note-reduser';\r\n\r\nconst NewPageFormContainer = (props) => {\r\n    const postNewPage = (formData) => {\r\n        props.addNewPage(props.userId, formData.newPage);\r\n        props.setCreateNewPageMode(false);\r\n    }\r\n    return (\r\n        <NewPageReduxForm onSubmit={postNewPage} setCreateNewPageMode={props.setCreateNewPageMode} />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        setCreateNewPageMode: state.notes.createNewPageMode,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setCreateNewPageMode, addNewPage})(NewPageFormContainer);","import React, { useState } from 'react';\r\nimport style from '../bottomAppBar.module.css';\r\n\r\nconst ColorModalWindow = (props) => {\r\n\r\n    const [bookmarkColor, setBookmarkColor] = useState(null);\r\n    const [bookmarkTextColor, setBookmarkTextColor] = useState(null);\r\n    const onSubmitTabColorSettings = () => {\r\n        props.setTabColorEditMode(false);\r\n        props.setTabColor(props.userId, props.pageId, bookmarkColor, bookmarkTextColor);\r\n    }\r\n    const closeModalWindol = () => {\r\n        props.setTabColorEditMode(false);\r\n    }\r\n  \r\n    return (\r\n        <div className={style.setTabColor}>\r\n            <span onClick={closeModalWindol}>Close</span>      \r\n            <div className={style.setColorItem}>\r\n                <input type='color' name=\"BookmarkColor\"\r\n                    value={bookmarkColor} onChange={e => setBookmarkColor(e.target.value)} />\r\n                <label for='pageColor'>Bookmark background color</label>\r\n            </div>\r\n            <div className={style.setColorItem}>\r\n                <input type='color' name=\"BookmarkTextColor\"\r\n                    value={bookmarkTextColor} onChange={e => setBookmarkTextColor(e.target.value)}  />\r\n                <label for='pageColor'>Bookmark text color</label>\r\n            </div>\r\n            <button onClick={onSubmitTabColorSettings}>Save</button>\r\n        </div>\r\n    )\r\n}\r\n      \r\nexport default ColorModalWindow;","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport style from '../bottomAppBar.module.css';\r\nimport { connect } from 'react-redux';\r\nimport {setTabColorEditMode, deletePage} from '../../../redux/note-reduser'\r\n\r\nconst SimpleMenu = (props) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const openSetTabColor = () => {\r\n    handleClose();\r\n    props.setTabColorEditMode(true);\r\n  }\r\n  const deletePage = () => {\r\n    props.deletePage(props.userId, props.pageId);\r\n    handleClose();  \r\n  }\r\n\r\n  const openEditPageTitleForm = () => {\r\n    props.setPageTitleEditMode(true);\r\n    handleClose(); \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} className={style.menuBtn} >\r\n        <MenuIcon className={style.menuBtn} />\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={openSetTabColor}>Bookmark color settings</MenuItem>\r\n        <MenuItem onClick={openEditPageTitleForm}>Edit page title</MenuItem>\r\n        <MenuItem onClick={deletePage}>Delete this page</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userId: state.auth.userId\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setTabColorEditMode, deletePage})(SimpleMenu);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { connect } from 'react-redux';\r\nimport {setEditModeForNote} from '../../redux/note-reduser';\r\nimport {logout} from '../../redux/auth-reduser';\r\nimport SimpleMenu from './simpleMenu/simpleMenu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text: {\r\n    padding: theme.spacing(2, 2, 0),\r\n  },\r\n  paper: {\r\n    paddingBottom: 50,\r\n  },\r\n  list: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  subheader: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto',\r\n  },\r\n  exitBtn: {\r\n    textDecoration: 'underline'\r\n  }\r\n}));\r\n\r\nconst BottomAppBar = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const activateEditMode = () => {\r\n    props.setEditModeForNote(true);\r\n  }\r\n\r\n  const logout = () => {\r\n    props.logout(props.userId);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\">\r\n            <SimpleMenu pageId={props.pageId} setPageTitleEditMode={props.setPageTitleEditMode} />\r\n          </IconButton>\r\n          <Fab color=\"secondary\" aria-label=\"add\" className={classes.fabButton} onClick={activateEditMode} >\r\n            <AddIcon />\r\n          </Fab>\r\n          <div className={classes.grow} />\r\n          <IconButton color=\"inherit\" className={classes.exitBtn} onClick={logout} >\r\n            Exit\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userId: state.auth.userId\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setEditModeForNote, logout})(BottomAppBar);\r\n","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport {deleteNote} from '../../../redux/note-reduser';\r\n\r\nconst NoteMenu = (props) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const setNoteEditMode = () => {\r\n        props.setNoteEditMode(true);\r\n        props.setNoteId(props.noteId);\r\n        handleClose();\r\n    }\r\n\r\n    const deleteNote = () => {\r\n        props.deleteNote(props.userId, props.pageId, props.noteId);\r\n        handleClose();\r\n    }\r\n\r\n    const setNoteTextEditMode = () => {\r\n        props.setNoteTextEditMode(true);\r\n        props.setNoteId(props.noteId);\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} >\r\n                <IconButton edge=\"end\" color=\"inherit\">\r\n                    <MoreIcon />\r\n                </IconButton>\r\n            </Button>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem onClick={setNoteEditMode}>Color settings</MenuItem>\r\n                <MenuItem onClick={setNoteTextEditMode}>Edit this note</MenuItem>\r\n                <MenuItem onClick={deleteNote} style={{backgroundColor: '#fc8b98'}}>Delete this note</MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {deleteNote})(NoteMenu);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport style from './noteMenu.module.css';\r\nimport {setNoteColor} from '../../../redux/note-reduser';\r\n\r\nconst NoteColorForm = (props) => {\r\n\r\n    const [noteColor, setNoteColor] = useState(null);\r\n    const [noteTextColor, setNoteTextColor] = useState(null);\r\n    const onSubmitNoteColorSettings = () => {\r\n        props.setNoteColor(props.userId, props.pageId, props.noteId, noteColor, noteTextColor);\r\n        props.setNoteEditMode(false);\r\n    }\r\n\r\n    const setNoteEditMode = () => {\r\n        props.setNoteEditMode(false);\r\n    }\r\n  \r\n    return (\r\n        <div className={style.setNoteColor}>\r\n            <h2>Note color Settings</h2>\r\n            <span onClick={setNoteEditMode} >Close</span>      \r\n            <div className={style.setColorItem}>\r\n                <input type='color' name=\"noteColor\"\r\n                    value={noteColor} onChange={e => setNoteColor(e.target.value)} />\r\n                <label for='noteColor'>Note background color</label>\r\n            </div>\r\n            <div className={style.setColorItem}>\r\n                <input type='color' name=\"noteTextColor\"\r\n                    value={noteTextColor} onChange={e => setNoteTextColor(e.target.value)}  />\r\n                <label for='noteTextColor'>Note text color</label>\r\n            </div>\r\n            <button onClick={onSubmitNoteColorSettings}>Save</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setNoteColor})(NoteColorForm)\r\n      ","import React from 'react';\r\nimport { Field, initialize, reduxForm } from 'redux-form';\r\nimport style from './editPageTitleForm.module.css';\r\n\r\nconst EditPageTitleForm = (props) => {\r\n\r\n    const closeModalWindol = () => {\r\n        props.setPageTitleEditMode(false);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.editPageTitleForm} >\r\n            <span onClick={closeModalWindol}>Close</span>\r\n            <h2>Edit page title</h2>\r\n            <div>\r\n                <Field name=\"editPageTitle\" component={'input'} placeholder='inter new title' \r\n                    className={style.editPageTitleInput} autoFocus={'true'} />\r\n            </div>\r\n            <button type={'submit'} className={style.editPageTitleBtn} >\r\n                Save\r\n            </button> \r\n        </form>\r\n    )\r\n}\r\n\r\nconst EditPageTitleFormReduxForm = reduxForm({\r\n    form: 'editPageTitle'\r\n})(EditPageTitleForm);\r\n\r\nexport default EditPageTitleFormReduxForm;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport EditPageTitleFormReduxForm from './editPageTitleForm';\r\nimport {editPageTitle} from '../../../redux/note-reduser';\r\n\r\n const EditPageTitleFormContainer = (props) => {\r\n    const submitNewPageTitle = (formData) => {\r\n        props.editPageTitle(props.userId, props.pageId, formData.editPageTitle);\r\n        props.setPageTitleEditMode(false);\r\n    }\r\n\r\n    return (\r\n        <EditPageTitleFormReduxForm onSubmit={submitNewPageTitle} setPageTitleEditMode={props.setPageTitleEditMode} />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {editPageTitle})(EditPageTitleFormContainer); ","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport style from './editNoteForm.module.css';\r\n\r\nconst EditNoteForm = (props) => {\r\n\r\n    const closeModalWindol =() => {\r\n        props.setNoteTextEditMode(false);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.editNoteForm} >\r\n            <span onClick={closeModalWindol}>Close</span> \r\n            <h2>Edit Note</h2>\r\n            <div>\r\n                <Field name=\"editNote\" component={'input'} placeholder='inter new text' \r\n                    className={style.editNoteInput} autoFocus={'true'} />\r\n            </div>\r\n            <button type={'submit'} className={style.editNoteBtn} >\r\n                Save\r\n            </button> \r\n        </form>\r\n    )\r\n}\r\n\r\nconst EditNoteFormReduxForm = reduxForm({\r\n    form: 'editPageTitle'\r\n})(EditNoteForm);\r\n\r\nexport default EditNoteFormReduxForm;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport EditNoteFormReduxForm from './editNoteForm';\r\nimport {editNoteText} from '../../../redux/note-reduser';\r\n\r\n const EditNoteFormContainer = (props) => {\r\n    const submitEditedNoteText = (formData) => {\r\n        props.editNoteText(props.userId, props.pageId, props.noteId, formData.editNote);\r\n        props.setNoteTextEditMode(false);\r\n    }\r\n\r\n    return (\r\n        <EditNoteFormReduxForm onSubmit={submitEditedNoteText} setNoteTextEditMode={props.setNoteTextEditMode} />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {editNoteText})(EditNoteFormContainer); ","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { connect } from 'react-redux';\r\nimport { getAllPages, setCreateNewPageMode, setTabColor, setTabColorEditMode } from '../../redux/note-reduser';\r\nimport NewNoteFormContainer from '../newNoteForm/newNormFormContainer';\r\nimport { AddNewPageButton } from './pagesControlButtons';\r\nimport NewPageFormContainer from './newTabForm/newPageFormContainer'\r\nimport ColorModalWindow from '../bottomAppBar/simpleMenu/colorModalWindow';\r\nimport BottomAppBar from '../bottomAppBar/bottomAppBar';\r\nimport NoteMenu from './noteMenu/noteMenu';\r\nimport NoteColorForm from './noteMenu/noteColorForm';\r\nimport EditPageTitleFormContainer from './editPageTitleForm/editPageTitleFormContainer';\r\nimport EditNoteFormContainer from './editNoteForm/editNoteFormContainer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport {SmallPreloader} from '../common/preloader/preloader';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  value === index && props.setPageId(props.pages[index]._id); //сетаем в pageId айди активной вкладки\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  list: {\r\n    wordWrap: 'break-word',\r\n    fontStyle: 'italic',\r\n    marginBottom: '50%'\r\n  },\r\n  appBar: {\r\n    position: 'fixed'\r\n  },\r\n  appBarItem: {\r\n    backgroundColor: 'red'\r\n  },\r\n  paper: {\r\n    marginTop: '15%'\r\n  },\r\n  note: {\r\n    borderBottom: '1px solid rgba(0,0,0,.25)',\r\n    margin: '3px',\r\n  },\r\n  text: {\r\n    wordWrap: 'break-word'\r\n  }\r\n}));\r\n\r\n/* const messages = [\r\n  {\r\n    id: 1,\r\n    primary: 'Brunch this week?',\r\n    secondary: \"I'll be in the neighbourhood this week. Let's grab a bite to eat\",\r\n    person: '/static/images/avatar/5.jpg',\r\n  },\r\n]; */\r\n\r\nconst ScrollableTabsButtonAuto = (props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [pageId, setPageId] = useState(null);\r\n  const [noteEditMode, setNoteEditMode] = useState(false);\r\n  const [noteId, setNoteId] = useState(null);\r\n  const [pageTitleEditMode, setPageTitleEditMode] = useState(false);\r\n  const [noteTextEditMode, setNoteTextEditMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.getAllPages(props.userId);\r\n  }, []);  \r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    /* const changedPageId = props.pages[newValue]._id;\r\n    setPageId(changedPageId); */\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {props.createNewPageMode && <NewPageFormContainer />}\r\n      {props.tabColorEditMode && <ColorModalWindow setTabColor={props.setTabColor}\r\n        userId={props.userId} pageId={pageId} setTabColorEditMode={props.setTabColorEditMode} />}\r\n      {noteEditMode && <NoteColorForm setNoteEditMode={setNoteEditMode} pageId={pageId} noteId={noteId} /> }\r\n      {noteTextEditMode && <EditNoteFormContainer setNoteTextEditMode={setNoteTextEditMode} pageId={pageId} noteId={noteId} /> }\r\n      {pageTitleEditMode && <EditPageTitleFormContainer pageId={pageId} setPageTitleEditMode={setPageTitleEditMode} initialValues={props.pages} />}  \r\n      <AppBar position=\"static\" color=\"default\" className={classes.appBar}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        > \r\n          { props.pages.length === 0 &&\r\n            <Tab label={'Please, create page'} {...a11yProps(0)} />\r\n          } \r\n          {props.pages.map((page, index, arr) => {\r\n              return <Tab label={page.title} {...a11yProps(index)} style={{ backgroundColor: page.bookmarkColor }} />   \r\n          })}\r\n          {!props.pageIsCreate && <SmallPreloader /> }\r\n          <AddNewPageButton setCreateNewPageMode={props.setCreateNewPageMode} />  \r\n        </Tabs>\r\n      </AppBar>\r\n      {props.pages.map((page, index) => {\r\n        return <TabPanel value={value} index={index} setPageId={setPageId} pages={props.pages} >\r\n          <Paper square className={classes.paper}>\r\n            <Typography className={classes.text} variant=\"h5\" gutterBottom>\r\n              {page.title}\r\n            </Typography>\r\n          </Paper>\r\n          <List className={classes.list}>\r\n            {page.notes.map((note) => (\r\n              <React.Fragment key={note._id}>\r\n                {/* {id === 1 && <ListSubheader className={classes.subheader}>Today</ListSubheader>}\r\n                {id === 5 && <ListSubheader className={classes.subheader}>Yesterday</ListSubheader>} */}\r\n                <ListItem button className={classes.note} \r\n                  style={{backgroundColor: note.backgroundColor, color: note.textColor}} >\r\n                  <ListItemText primary={note.content} />\r\n                  <NoteMenu setNoteEditMode={setNoteEditMode} pageId={pageId} noteId={note._id}\r\n                     setNoteId={setNoteId} setNoteTextEditMode={setNoteTextEditMode} />\r\n                </ListItem>\r\n              </React.Fragment>\r\n            ))}\r\n            {props.editMode && <NewNoteFormContainer pageId={pageId} />} \r\n          </List>\r\n        </TabPanel>\r\n      })}\r\n      <BottomAppBar pageId={pageId} setPageTitleEditMode={setPageTitleEditMode}  />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    pages: state.notes.pages,\r\n    userId: state.auth.userId,\r\n    editMode: state.notes.editMode,\r\n    createNewPageMode: state.notes.createNewPageMode,\r\n    tabColorEditMode: state.notes.tabColorEditMode,\r\n    pageIsCreate: state.isLoading.pageIsCreate,\r\n    noteIscreate: state.isLoading.noteIscreate\r\n  }\r\n}\r\n\r\nexport default compose (\r\n  connect(mapStateToProps, { getAllPages, setCreateNewPageMode, setTabColor, setTabColorEditMode }),\r\n  withRouter\r\n)(ScrollableTabsButtonAuto);\r\n\r\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Registration from './components/registration/registration';\nimport ScrollableTabsButtonAuto from './components/tabsNotes/tabsNotes';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport {setAuth} from './redux/auth-reduser';\n\nconst App = (props) => {\n\n  useEffect(()=>{\n     props.setAuth();\n  },[]);\n  \n  return (\n    <div className=\"App\">\n        { !props.isAuth ? \n          \n          <Registration /> \n        :\n        <>\n          <ScrollableTabsButtonAuto /> \n        </>\n        }\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuth\n  }\n}\n\nexport default compose (\n  connect(mapStateToProps, { setAuth }))(App);\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunkMiddleware from \"redux-thunk\";  \r\nimport { reducer as formReducer } from 'redux-form'\r\nimport authReduser from './auth-reduser';\r\nimport noteReduser from './note-reduser';\r\nimport isLoadingReduser from './isloading-reduser';\r\n\r\nlet redusers = combineReducers({\r\n    auth: authReduser,\r\n    notes: noteReduser,\r\n    isLoading: isLoadingReduser,\r\n    form: formReducer   //redux-form Lesson 75\r\n});\r\n\r\nlet store = createStore(redusers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider >\n    </BrowserRouter>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formTitle\":\"registration_formTitle__yYRrG\",\"regButton\":\"registration_regButton__1tT5k\",\"loginButton\":\"registration_loginButton__rHBAS\",\"error\":\"registration_error__3pv7G\",\"modalWrapper\":\"registration_modalWrapper__vlpe-\",\"modal\":\"registration_modal__3Hkc1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuBtn\":\"bottomAppBar_menuBtn__1YjwR\",\"setTabColor\":\"bottomAppBar_setTabColor__1Oafv\",\"setColorItem\":\"bottomAppBar_setColorItem__1CwPW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newNoteForm\":\"newNoteForm_newNoteForm__1Wy2a\",\"newNoteBtn\":\"newNoteForm_newNoteBtn__sy0c9\",\"newNoteInput\":\"newNoteForm_newNoteInput__eBhMa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPageForm\":\"newTabForm_newPageForm__2OjPa\",\"newPageInput\":\"newTabForm_newPageInput__3cI2Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setNoteColor\":\"noteMenu_setNoteColor__1D1qp\",\"setColorItem\":\"noteMenu_setColorItem__3H4tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editPageTitleForm\":\"editPageTitleForm_editPageTitleForm__T1Aqp\",\"editPageTitleInput\":\"editPageTitleForm_editPageTitleInput__OCPBS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editNoteForm\":\"editNoteForm_editNoteForm__1UstM\",\"editNoteInput\":\"editNoteForm_editNoteInput__3PEx4\"};"],"sourceRoot":""}