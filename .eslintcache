[{"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\index.js":"1","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\App.js":"2","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\redux\\redux-store.js":"4","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\redux\\auth-reduser.js":"5","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\redux\\note-reduser.js":"6","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\redux\\isloading-reduser.js":"7","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\registration\\registration.jsx":"8","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\tabsNotes\\tabsNotes.jsx":"9","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\API\\api.js":"10","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\tabsNotes\\newTabForm\\newPageFormContainer.js":"11","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\newNoteForm\\newNormFormContainer.js":"12","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\tabsNotes\\editNoteForm\\editNoteFormContainer.js":"13","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\tabsNotes\\editPageTitleForm\\editPageTitleFormContainer.js":"14","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\registration\\registerCompletedModal.jsx":"15","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\tabsNotes\\pagesControlButtons.jsx":"16","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\registration\\registrationForm.jsx":"17","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\bottomAppBar\\bottomAppBar.jsx":"18","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\tabsNotes\\noteMenu\\noteMenu.jsx":"19","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\tabsNotes\\noteMenu\\noteColorForm.jsx":"20","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\bottomAppBar\\simpleMenu\\colorModalWindow.jsx":"21","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\common\\preloader\\preloader.jsx":"22","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\registration\\asyncValidate.js":"23","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\tabsNotes\\newTabForm\\newPageForm.jsx":"24","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\tabsNotes\\editPageTitleForm\\editPageTitleForm.jsx":"25","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\newNoteForm\\newNoteForm.jsx":"26","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\tabsNotes\\editNoteForm\\editNoteForm.jsx":"27","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\bottomAppBar\\simpleMenu\\simpleMenu.jsx":"28"},{"size":727,"mtime":1611413702325,"results":"29","hashOfConfig":"30"},{"size":759,"mtime":1612695946231,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"30"},{"size":598,"mtime":1613571745004,"results":"33","hashOfConfig":"30"},{"size":4100,"mtime":1612696350249,"results":"34","hashOfConfig":"30"},{"size":8448,"mtime":1613571164813,"results":"35","hashOfConfig":"30"},{"size":1054,"mtime":1613894457318,"results":"36","hashOfConfig":"30"},{"size":2184,"mtime":1612695946601,"results":"37","hashOfConfig":"30"},{"size":7186,"mtime":1613745787787,"results":"38","hashOfConfig":"30"},{"size":5150,"mtime":1613893624332,"results":"39","hashOfConfig":"30"},{"size":778,"mtime":1613894432247,"results":"40","hashOfConfig":"30"},{"size":731,"mtime":1613894421714,"results":"41","hashOfConfig":"30"},{"size":739,"mtime":1612693739382,"results":"42","hashOfConfig":"30"},{"size":757,"mtime":1612694072756,"results":"43","hashOfConfig":"30"},{"size":554,"mtime":1611578242021,"results":"44","hashOfConfig":"30"},{"size":399,"mtime":1611996917448,"results":"45","hashOfConfig":"30"},{"size":2827,"mtime":1613570550970,"results":"46","hashOfConfig":"30"},{"size":2285,"mtime":1612694708658,"results":"47","hashOfConfig":"30"},{"size":2057,"mtime":1612447985025,"results":"48","hashOfConfig":"30"},{"size":1638,"mtime":1613894450920,"results":"49","hashOfConfig":"30"},{"size":1407,"mtime":1612692355271,"results":"50","hashOfConfig":"30"},{"size":469,"mtime":1611494861413,"results":"51","hashOfConfig":"30"},{"size":403,"mtime":1611406851913,"results":"52","hashOfConfig":"30"},{"size":938,"mtime":1612099562558,"results":"53","hashOfConfig":"30"},{"size":977,"mtime":1612698190122,"results":"54","hashOfConfig":"30"},{"size":937,"mtime":1612445702855,"results":"55","hashOfConfig":"30"},{"size":912,"mtime":1612696586366,"results":"56","hashOfConfig":"30"},{"size":1766,"mtime":1612093734953,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"bo1ieo",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\index.js",[],["121","122"],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\App.js",[],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\redux\\redux-store.js",[],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\redux\\auth-reduser.js",[],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\redux\\note-reduser.js",[],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\redux\\isloading-reduser.js",[],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\registration\\registration.jsx",[],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\tabsNotes\\tabsNotes.jsx",["123"],"import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { connect } from 'react-redux';\r\nimport { getAllPages, setCreateNewPageMode, setTabColor, setTabColorEditMode } from '../../redux/note-reduser';\r\nimport NewNoteFormContainer from '../newNoteForm/newNormFormContainer';\r\nimport { AddNewPageButton } from './pagesControlButtons';\r\nimport NewPageFormContainer from './newTabForm/newPageFormContainer'\r\nimport ColorModalWindow from '../bottomAppBar/simpleMenu/colorModalWindow';\r\nimport BottomAppBar from '../bottomAppBar/bottomAppBar';\r\nimport NoteMenu from './noteMenu/noteMenu';\r\nimport NoteColorForm from './noteMenu/noteColorForm';\r\nimport EditPageTitleFormContainer from './editPageTitleForm/editPageTitleFormContainer';\r\nimport EditNoteFormContainer from './editNoteForm/editNoteFormContainer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport {SmallPreloader} from '../common/preloader/preloader';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  value === index && props.setPageId(props.pages[index]._id); //сетаем в pageId айди активной вкладки\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  list: {\r\n    wordWrap: 'break-word',\r\n    fontStyle: 'italic',\r\n    marginBottom: '50%'\r\n  },\r\n  appBar: {\r\n    position: 'fixed'\r\n  },\r\n  appBarItem: {\r\n    backgroundColor: 'red'\r\n  },\r\n  paper: {\r\n    marginTop: '15%'\r\n  },\r\n  note: {\r\n    borderBottom: '1px solid rgba(0,0,0,.25)',\r\n    margin: '3px',\r\n  },\r\n  text: {\r\n    wordWrap: 'break-word'\r\n  }\r\n}));\r\n\r\n/* const messages = [\r\n  {\r\n    id: 1,\r\n    primary: 'Brunch this week?',\r\n    secondary: \"I'll be in the neighbourhood this week. Let's grab a bite to eat\",\r\n    person: '/static/images/avatar/5.jpg',\r\n  },\r\n]; */\r\n\r\nconst ScrollableTabsButtonAuto = (props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [pageId, setPageId] = useState(null);\r\n  const [noteEditMode, setNoteEditMode] = useState(false);\r\n  const [noteId, setNoteId] = useState(null);\r\n  const [pageTitleEditMode, setPageTitleEditMode] = useState(false);\r\n  const [noteTextEditMode, setNoteTextEditMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.getAllPages(props.userId);\r\n  }, []);  \r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    /* const changedPageId = props.pages[newValue]._id;\r\n    setPageId(changedPageId); */\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {props.createNewPageMode && <NewPageFormContainer />}\r\n      {props.tabColorEditMode && <ColorModalWindow setTabColor={props.setTabColor}\r\n        userId={props.userId} pageId={pageId} setTabColorEditMode={props.setTabColorEditMode} />}\r\n      {noteEditMode && <NoteColorForm setNoteEditMode={setNoteEditMode} pageId={pageId} noteId={noteId} /> }\r\n      {noteTextEditMode && <EditNoteFormContainer setNoteTextEditMode={setNoteTextEditMode} pageId={pageId} noteId={noteId} /> }\r\n      {pageTitleEditMode && <EditPageTitleFormContainer pageId={pageId} setPageTitleEditMode={setPageTitleEditMode} initialValues={props.pages} />}  \r\n      <AppBar position=\"static\" color=\"default\" className={classes.appBar}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        > \r\n          { props.pages.length === 0 &&\r\n            <Tab label={'Please, create page'} {...a11yProps(0)} />\r\n          } \r\n          {props.pages.map((page, index, arr) => {\r\n              return <Tab label={page.title} {...a11yProps(index)} style={{ backgroundColor: page.bookmarkColor }} />   \r\n          })}\r\n          {!props.pageIsCreate && <SmallPreloader /> }\r\n          <AddNewPageButton setCreateNewPageMode={props.setCreateNewPageMode} />  \r\n        </Tabs>\r\n      </AppBar>\r\n      {props.pages.map((page, index) => {\r\n        return <TabPanel value={value} index={index} setPageId={setPageId} pages={props.pages} >\r\n          <Paper square className={classes.paper}>\r\n            <Typography className={classes.text} variant=\"h5\" gutterBottom>\r\n              {page.title}\r\n            </Typography>\r\n          </Paper>\r\n          <List className={classes.list}>\r\n            {page.notes.map((note) => (\r\n              <React.Fragment key={note._id}>\r\n                {/* {id === 1 && <ListSubheader className={classes.subheader}>Today</ListSubheader>}\r\n                {id === 5 && <ListSubheader className={classes.subheader}>Yesterday</ListSubheader>} */}\r\n                <ListItem button className={classes.note} \r\n                  style={{backgroundColor: note.backgroundColor, color: note.textColor}} >\r\n                  <ListItemText primary={note.content} />\r\n                  <NoteMenu setNoteEditMode={setNoteEditMode} pageId={pageId} noteId={note._id}\r\n                     setNoteId={setNoteId} setNoteTextEditMode={setNoteTextEditMode} />\r\n                </ListItem>\r\n              </React.Fragment>\r\n            ))}\r\n            {props.editMode && <NewNoteFormContainer pageId={pageId} />} \r\n          </List>\r\n        </TabPanel>\r\n      })}\r\n      <BottomAppBar pageId={pageId} setPageTitleEditMode={setPageTitleEditMode}  />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    pages: state.notes.pages,\r\n    userId: state.auth.userId,\r\n    editMode: state.notes.editMode,\r\n    createNewPageMode: state.notes.createNewPageMode,\r\n    tabColorEditMode: state.notes.tabColorEditMode,\r\n    pageIsCreate: state.isLoading.pageIsCreate,\r\n    noteIscreate: state.isLoading.noteIscreate\r\n  }\r\n}\r\n\r\nexport default compose (\r\n  connect(mapStateToProps, { getAllPages, setCreateNewPageMode, setTabColor, setTabColorEditMode }),\r\n  withRouter\r\n)(ScrollableTabsButtonAuto);\r\n\r\n","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\API\\api.js",[],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\tabsNotes\\newTabForm\\newPageFormContainer.js",[],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\newNoteForm\\newNormFormContainer.js",[],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\tabsNotes\\editNoteForm\\editNoteFormContainer.js",[],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\tabsNotes\\editPageTitleForm\\editPageTitleFormContainer.js",[],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\registration\\registerCompletedModal.jsx",[],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\tabsNotes\\pagesControlButtons.jsx",[],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\registration\\registrationForm.jsx",[],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\bottomAppBar\\bottomAppBar.jsx",[],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\tabsNotes\\noteMenu\\noteMenu.jsx",["124"],"import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport {deleteNote} from '../../../redux/note-reduser';\r\n\r\nconst NoteMenu = (props) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const setNoteEditMode = () => {\r\n        props.setNoteEditMode(true);\r\n        props.setNoteId(props.noteId);\r\n        handleClose();\r\n    }\r\n\r\n    const deleteNote = () => {\r\n        props.deleteNote(props.userId, props.pageId, props.noteId);\r\n        handleClose();\r\n    }\r\n\r\n    const setNoteTextEditMode = () => {\r\n        props.setNoteTextEditMode(true);\r\n        props.setNoteId(props.noteId);\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} >\r\n                <IconButton edge=\"end\" color=\"inherit\">\r\n                    <MoreIcon />\r\n                </IconButton>\r\n            </Button>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem onClick={setNoteEditMode}>Color settings</MenuItem>\r\n                <MenuItem onClick={setNoteTextEditMode}>Edit this note</MenuItem>\r\n                <MenuItem onClick={deleteNote} style={{backgroundColor: '#fc8b98'}}>Delete this note</MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {deleteNote})(NoteMenu);","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\tabsNotes\\noteMenu\\noteColorForm.jsx",[],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\bottomAppBar\\simpleMenu\\colorModalWindow.jsx",[],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\common\\preloader\\preloader.jsx",[],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\registration\\asyncValidate.js",[],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\tabsNotes\\newTabForm\\newPageForm.jsx",["125"],"import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport style from './newTabForm.module.css';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst NewPageForm = (props) => {\r\n\r\n    const setCreateNewPageMode = () => {\r\n        props.setCreateNewPageMode(false);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.newPageForm}>\r\n            <div>\r\n                <Field name=\"newPage\" component={'input'} placeholder='inter page title' autoFocus={'true'}\r\n                    className={style.newPageInput} /* onBlur={setCreateNewPageMode} */ />\r\n            </div>\r\n            <button type={'submit'} className={style.newPageBtn} >\r\n                <AddIcon />\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewPageReduxForm = reduxForm({\r\n    form: 'createNewNote' // a unique identifier for this form\r\n  })(NewPageForm);\r\n\r\n  export default NewPageReduxForm;","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\tabsNotes\\editPageTitleForm\\editPageTitleForm.jsx",["126"],"import React from 'react';\r\nimport { Field, initialize, reduxForm } from 'redux-form';\r\nimport style from './editPageTitleForm.module.css';\r\n\r\nconst EditPageTitleForm = (props) => {\r\n\r\n    const closeModalWindol = () => {\r\n        props.setPageTitleEditMode(false);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.editPageTitleForm} >\r\n            <span onClick={closeModalWindol}>Close</span>\r\n            <h2>Edit page title</h2>\r\n            <div>\r\n                <Field name=\"editPageTitle\" component={'input'} placeholder='inter new title' \r\n                    className={style.editPageTitleInput} autoFocus={'true'} />\r\n            </div>\r\n            <button type={'submit'} className={style.editPageTitleBtn} >\r\n                Save\r\n            </button> \r\n        </form>\r\n    )\r\n}\r\n\r\nconst EditPageTitleFormReduxForm = reduxForm({\r\n    form: 'editPageTitle'\r\n})(EditPageTitleForm);\r\n\r\nexport default EditPageTitleFormReduxForm;","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\newNoteForm\\newNoteForm.jsx",["127"],"import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport style from './newNoteForm.module.css';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst newNoteForm = (props) => {\r\n\r\n    const setEditModeForNote = () => {\r\n        props.setEditModeForNote(false);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.newNoteForm} >\r\n            <div>\r\n                <Field name=\"newNote\" component={'input'} placeholder='inter your note' \r\n                    className={style.newNoteInput} autoFocus={'true'} /* onBlur={setEditModeForNote} */ />\r\n            </div>\r\n            <button type={'submit'} className={style.newNoteBtn} >\r\n                <AddIcon />\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewNoteReduxForm = reduxForm({\r\n    form: 'createNewNote', // a unique identifier for this form\r\n  })(newNoteForm);\r\n\r\n  export default NewNoteReduxForm;\r\n","C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\tabsNotes\\editNoteForm\\editNoteForm.jsx",[],"C:\\Users\\User\\Documents\\Мои документы\\Web\\Projects\\React\\myNotepad\\my-app\\src\\components\\bottomAppBar\\simpleMenu\\simpleMenu.jsx",["128"],"import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport style from '../bottomAppBar.module.css';\r\nimport { connect } from 'react-redux';\r\nimport {setTabColorEditMode, deletePage} from '../../../redux/note-reduser'\r\n\r\nconst SimpleMenu = (props) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const openSetTabColor = () => {\r\n    handleClose();\r\n    props.setTabColorEditMode(true);\r\n  }\r\n  const deletePage = () => {\r\n    props.deletePage(props.userId, props.pageId);\r\n    handleClose();  \r\n  }\r\n\r\n  const openEditPageTitleForm = () => {\r\n    props.setPageTitleEditMode(true);\r\n    handleClose(); \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} className={style.menuBtn} >\r\n        <MenuIcon className={style.menuBtn} />\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={openSetTabColor}>Bookmark color settings</MenuItem>\r\n        <MenuItem onClick={openEditPageTitleForm}>Edit page title</MenuItem>\r\n        <MenuItem onClick={deletePage}>Delete this page</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userId: state.auth.userId\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setTabColorEditMode, deletePage})(SimpleMenu);\r\n",{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":111,"column":6,"nodeType":"135","endLine":111,"endColumn":8,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"141","line":8,"column":11,"nodeType":"139","messageId":"140","endLine":8,"endColumn":31},{"ruleId":"137","severity":1,"message":"142","line":2,"column":17,"nodeType":"139","messageId":"140","endLine":2,"endColumn":27},{"ruleId":"137","severity":1,"message":"143","line":8,"column":11,"nodeType":"139","messageId":"140","endLine":8,"endColumn":29},{"ruleId":"137","severity":1,"message":"138","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["146"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'setCreateNewPageMode' is assigned a value but never used.","'initialize' is defined but never used.","'setEditModeForNote' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},"Update the dependencies array to be: [props]",{"range":"149","text":"150"},[3528,3530],"[props]"]